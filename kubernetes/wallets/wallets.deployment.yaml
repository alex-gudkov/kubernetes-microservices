apiVersion: apps/v1
kind: Deployment
metadata:
    name: wallets
    labels:
        app.kubernetes.io/name: kubernetes-microservices
        app.kubernetes.io/component: wallets
spec:
    replicas: 1
    selector:
        matchLabels:
            app.kubernetes.io/name: kubernetes-microservices
            app.kubernetes.io/component: wallets
    template:
        metadata:
            labels:
                app.kubernetes.io/name: kubernetes-microservices
                app.kubernetes.io/component: wallets
        spec:
            containers:
                -   name: wallets
                    image: registry.gitlab.com/alex-gudkov/kubernetes-microservices/wallets:latest
                    imagePullPolicy: Always
                    ports:
                        -   containerPort: 3003
                    env:
                        # application
                        -   name: APP_PORT
                            value: "3003"
                        # RabbitMQ
                        -   name: RABBITMQ_URL
                            value: "amqp://rabbitmq:5672"
                        # PostgeSQL
                        -   name: POSTGRES_HOST
                            value: "postgres"
                        -   name: POSTGRES_PORT
                            value: "5432"
                        -   name: POSTGRES_USER
                            value: "postgres"
                        -   name: POSTGRES_PASSWORD
                            value: "root"
                        -   name: POSTGRES_DB
                            value: "kubernetes_microservices"
                    resources:
                        limits: 
                            memory: 512Mi
                            ephemeral-storage: 1Gi
                            cpu: 250m
                        requests:
                            memory: 512Mi
                            ephemeral-storage: 1Gi
                            cpu: 250m
            imagePullSecrets:
                -   name: regcred
            restartPolicy: Always
